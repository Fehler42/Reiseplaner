
import javax.swing.border.Border;

import java.awt.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;

public class BessereMain extends JFrame {
	private static final long serialVersionUID = 1L;
	
	//GUI design stuff
	public JPanel masterPanel;
	public JPanel mainPage;
	public JPanel payPage;
	CardLayout cardLayout;
	
	//Test
	public String priceToPay;
	
	//CardLayout page names
	public static final String PAGE_MAIN = "MAIN";
	public static final String PAGE_PAY = "PAY";
	public BessereMain() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		//startpositions x, y && window width, height
		setBounds(100, 100, 800, 600);
		masterPanel = new JPanel();
		cardLayout = new CardLayout();
		masterPanel.setLayout(cardLayout);
		
		//debug stuff
		masterPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		masterPanel.setBorder(BorderFactory.createLineBorder(Color.blue));
		
		//finish masterPanel here
		setContentPane(masterPanel);
	}
	
	/**
	 * Idea: Each base feature creates their own card page and the refining features add to those cards
	 */
	public void design() {
		mainPage = new JPanel();
		mainPage.setLayout(new BorderLayout());
		
		paypageDesign();
		
		//Upperwindow contains SuchLeiste
		JPanel upperWindow = new JPanel();
		upperWindow.setLayout(new BoxLayout(upperWindow, BoxLayout.X_AXIS)); //so far this gives the least headache
		mainPage.add(upperWindow, BorderLayout.NORTH);
		
		//centerPanel contains buttons to book stuff
		JPanel centerPanel = new JPanel(new FlowLayout()); //dynamic layout 
		mainPage.add(centerPanel, BorderLayout.CENTER);
		
		masterPanel.add(mainPage, PAGE_MAIN);
		masterPanel.add(payPage, PAGE_PAY);
		
		cardLayout.show(masterPanel, PAGE_MAIN);
		
	}
	
	public void paypageDesign() {
		payPage = new JPanel();
		payPage.setLayout(new BoxLayout(payPage, BoxLayout.Y_AXIS));
		
		JPanel upperPage = new JPanel(new BorderLayout());
		JPanel lowerPage = new JPanel(new BorderLayout());
		payPage.add(upperPage);
		payPage.add(lowerPage);
		
		JLabel description = new JLabel("Das kostet ");
		
		description.setAlignmentX(CENTER_ALIGNMENT);
		description.setAlignmentY(CENTER_ALIGNMENT);
		upperPage.add(description, BorderLayout.SOUTH);
		
	}

	public void updateText(String newText) {
		priceToPay = newText;
		updatePrice();
	}
	
	public void updatePrice() {
		JPanel upperArea = (JPanel) payPage.getComponent(0);
		JLabel text = (JLabel) upperArea.getComponent(0);
		text.setText("Das kostet " + priceToPay);	
		text.setHorizontalTextPosition(JLabel.CENTER);
		
	}
	
	public static void main(String[] args) {

		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				BessereMain pTest = new BessereMain();
				pTest.design();
				pTest.setVisible(true);
				
			}
		});

	}
}
